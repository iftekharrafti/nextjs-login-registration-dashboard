import Head from "next/head";
import { Inter } from "next/font/google";
import useFetch from "@/hooks/useFetch";
import { Button, Col, Container, Form, Row } from "react-bootstrap";
import { useForm } from "react-hook-form";
import Style from "../styles/Application.module.css";
import { useState } from "react";
import axios from "axios";
import { BASE_URL } from "@/utils/api";
import { toast } from "react-toastify";


export default function Application() {
  const [selectedOption, setSelectedOption] = useState("");
  const [isValid, setIsValid] = useState(true);
  const [loadingBtn, setLoadingBtn] = useState(false);

  const {
    register,
    handleSubmit,
    reset,
    formState: { errors },
  } = useForm();

  const onSubmit = async (data) => {
    
  };

  return (
    <>
      <Head>
        <title>Cox&apos;s Bazar Student Forum Application</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="./csfdu.jpeg" />
      </Head>
      <main>
        <>
          <div className="headerTitle mt-5">
            <h3 class="headerTitleMain">MEMBER APPLICATION FORM</h3>
          </div>
          {/* Alumni Details */}
          <Container className="mt-4 mb-5">
            <Row>
              <Col lg={8} md={10} sm={12} className="mx-auto">
              <div className={Style.application}>
                <Form onSubmit={handleSubmit(onSubmit)}>
                  <div className={Style.contactInstitute}>
                    <Form.Group
                      className={`${Style.contact} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>Student Name</Form.Label>
                      <Form.Control size="sm"
                        type="text"
                        className={Style.inputField}
                        {...register("name", { required: true })}
                        placeholder="Name"
                      />
                      {errors.name && (
                        <span className="text-danger">Name is required</span>
                      )}
                    </Form.Group>
                    <Form.Group
                      className={`${Style.institute} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>
                      DU Registration No
                      </Form.Label>
                      <Form.Control size="sm"
                        type="text"
                        className={Style.inputField}
                        {...register("registration", { required: true })}
                        placeholder="DU Registration No"
                      />
                      {errors.registration && (
                        <span className="text-danger">
                          Registration is required
                        </span>
                      )}
                    </Form.Group>
                  </div>
                  <div className={`${Style.contactInstitute}`}>
                    <Form.Group
                      className={`${Style.contact} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>
                        Phone Number
                      </Form.Label>
                      <Form.Control size="sm"
                        type="text"
                        className={`${Style.inputField} input`}
                        {...register("phone", { required: true })}
                        placeholder="Phone Number"
                      />
                      {errors.phone && (
                        <span className="text-danger">Phone Number is required</span>
                      )}
                    </Form.Group>
                    <Form.Group
                      className={`${Style.institute} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>
                        E-mail (DU Institutional)
                      </Form.Label>
                      <Form.Control size="sm"
                        type="email"
                        className={Style.inputField}
                        {...register("email", { required: true })}
                        placeholder="E-mail (DU Institutional)"
                      />
                      {errors.email && (
                        <span className="text-danger">
                          E-mail (DU Institutional) is required
                        </span>
                      )}
                    </Form.Group>
                  </div>
                  <div className={`${Style.contactInstitute}`}>
                    <Form.Group
                      className={`${Style.contact} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>
                      Re-Type E-mail
                      </Form.Label>
                      <Form.Control size="sm"
                        type="email"
                        className={`${Style.inputField} input`}
                        {...register("retype_email", { required: true })}
                        placeholder="Re-Type E-mail"
                      />
                      {errors.retype_email && (
                        <span className="text-danger">
                          Re-Type E-mail is required
                        </span>
                      )}
                    </Form.Group>
                    <Form.Group
                      className={`${Style.institute} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>
                        Password
                      </Form.Label>
                      <Form.Control size="sm"
                        type="password"
                        className={`${Style.inputField} ${Style.inputNumber}`}
                        {...register("password", { required: true })}
                        placeholder="Password"
                      />
                      {errors.password && (
                        <span className="text-danger">Password is required</span>
                      )}
                    </Form.Group>
                  </div>
                  <div className={`${Style.contactInstitute}`}>
                    <Form.Group
                      className={`${Style.contact} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>
                        Confirm Password
                      </Form.Label>
                      <Form.Control size="sm"
                        type="password"
                        className={`${Style.inputField} input`}
                        {...register("confirmPassword", { required: true })}
                        placeholder="Confirm Password"
                      />
                      {errors.confirmPassword && (
                        <span className="text-danger">Confirm Password is required</span>
                      )}
                    </Form.Group>
                    <Form.Group
                      className={`${Style.institute} mb-3`}
                      controlId="exampleForm.ControlInput1"
                    >
                      <Form.Label className={Style.inputLabel}>
                        Select Profile Image(300*300px)
                      </Form.Label>
                      <Form.Control size="sm"
                        type="file"
                        className={`${Style.inputField} input`}
                        {...register("file", { required: true })}
                      />
                      {errors.file && (
                        <span className="text-danger">
                          Profile Image is required
                        </span>
                      )}
                    </Form.Group>
                  </div>

                  {
                    loadingBtn ? (
                      <div className="d-flex justify-content-center">
                    <Button disabled className={Style.submit}>
                      Inserting...
                    </Button>
                  </div>
                    ):(
                      <div className="d-flex justify-content-center">
                    <Button type="submit" className={Style.submit}>
                      Submit
                    </Button>
                  </div>
                    )
                  }
                  
                </Form>
                </div>
              </Col>
            </Row>
          </Container>
        </>
      </main>
    </>
  );
}
